{"ast":null,"code":"var _jsxFileName = \"/Users/alexfalconer/Development/code/auth-project-4/auth-project-4/client/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = \"http://localhost:3001/\";\nexport const Register = ({\n  setUser,\n  setLoggedin\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [collection, setCollection] = useState({});\n  const history = useHistory();\n\n  const handleChange = e => {\n    if (e.target.name === \"email\") setEmail(e.target.value);\n    if (e.target.name === \"password\") setPassword(e.target.value);\n    if (e.target.name === \"name\") setName(e.target.value);\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n\n    const createCollection = () => {\n      fetch(api + \"collections\", {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(collection)\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n        setCollection({});\n      });\n    };\n\n    const newUser = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accepts: \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        name\n      })\n    };\n    fetch(api + \"register\", newUser).then(res => res.json()).then(data => {\n      console.log(data);\n      setUser(data);\n      setLoggedin(true);\n      createCollection();\n      history.push(\"/collection\");\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Become a Collector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      className: \"poem-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: handleChange,\n        name: \"email\",\n        className: \"poem-input\",\n        type: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter password\",\n        value: password,\n        onChange: handleChange,\n        name: \"password\",\n        className: \"poem-input\",\n        type: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter username\",\n        value: name,\n        onChange: handleChange,\n        name: \"name\",\n        className: \"poem-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        className: \"poem-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"CR0oB4Sb2WleaLHQZqTUbp7Mry8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/alexfalconer/Development/code/auth-project-4/auth-project-4/client/src/components/Register.js"],"names":["React","useState","useHistory","api","Register","setUser","setLoggedin","email","setEmail","password","setPassword","name","setName","collection","setCollection","history","handleChange","e","target","value","handleRegister","preventDefault","createCollection","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","newUser","Accepts","data","push","catch","err"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\n\nconst api = \"http://localhost:3001/\"\n\nexport const Register = ({ setUser, setLoggedin }) => {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [name, setName] = useState(\"\")\n  const [collection, setCollection] = useState({})\n  const history = useHistory()\n\n  const handleChange = (e) => {\n    if (e.target.name === \"email\") setEmail(e.target.value)\n    if (e.target.name === \"password\") setPassword(e.target.value)\n    if (e.target.name === \"name\") setName(e.target.value)\n  }\n\n  const handleRegister = (e) => {\n    e.preventDefault()\n    const createCollection = () => {\n        fetch(api + \"collections\", {\n            method: 'POST',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(collection)\n        }).then((res) => res.json())\n        .then((res) => {\n          console.log(res)\n          setCollection({})\n        })\n      }\n  \n    const newUser = {\n      method: \"POST\",\n      headers: {\n            \"Content-type\": \"application/json\",\n            Accepts: \"application/json\",\n        },\n        body: JSON.stringify({\n            email,\n            password,\n            name\n        }),\n      }\n    fetch(api + \"register\", newUser)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data)\n        setUser(data)\n        setLoggedin(true)\n        createCollection()\n        history.push(\"/collection\") \n      })\n      .catch((err) => console.log(err))\n  }\n  return (\n    <div className='login-form'>\n      <h1>Become a Collector</h1>\n      <form onSubmit={handleRegister} className='poem-form'>\n          <input\n            placeholder='Enter email'\n            value={email}\n            onChange={handleChange}\n            name='email'\n            className='poem-input'\n            type=\"email\"\n            required\n          />\n          <br></br>\n            <input\n            placeholder='Enter password'\n            value={password}\n            onChange={handleChange}\n            name='password'\n            className='poem-input'\n            type=\"password\"\n            required\n          />\n          <br></br>\n           <input\n            placeholder='Enter username'\n            value={name}\n            onChange={handleChange}\n            name='name'\n            className='poem-input'\n            required\n          />\n          <br></br>\n          <br></br>\n          <button onClick={handleRegister} className='poem-button'>\n            Submit\n          </button>\n    </form>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}