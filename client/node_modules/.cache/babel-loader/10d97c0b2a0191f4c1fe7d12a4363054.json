{"ast":null,"code":"var _jsxFileName = \"/Users/alexfalconer/Development/code/auth-project-4/auth-project-4/client/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = \"http://localhost:3001/\";\nexport const Login = ({\n  setUser,\n  setLoggedIn\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const handleChange = e => {\n    if (e.target.name === \"email\") setEmail(e.target.value);\n    if (e.target.name === \"password\") setPassword(e.target.value);\n  };\n\n  const handleLogin = e => {\n    e.preventDefault(); // Send Login request to our backend\n\n    const loginObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    };\n    fetch(api + \"login\", loginObj).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (!!data.id) {\n        // set the current user to some higher state\n        setUser(data);\n        setLoggedIn(true);\n        history.push(\"/profile\");\n      }\n    }).catch(err => console.log(err));\n  }; // console.log(email, password)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"So we meet again...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"poem-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: handleChange,\n        name: \"email\",\n        className: \"poem-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter password\",\n        value: password,\n        onChange: handleChange,\n        name: \"password\",\n        className: \"poem-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"poem-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"New here?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/register\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"cJr7VbQ/R8GRPXZytKWZJrG6uB8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/alexfalconer/Development/code/auth-project-4/auth-project-4/client/src/components/Login.js"],"names":["React","useState","useHistory","Link","api","Login","setUser","setLoggedIn","email","setEmail","password","setPassword","history","handleChange","e","target","name","value","handleLogin","preventDefault","loginObj","method","headers","body","JSON","stringify","fetch","then","res","json","data","console","log","id","push","catch","err"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { Link } from 'react-router-dom';\nconst api = \"http://localhost:3001/\"\n\nexport const Login = ({ setUser, setLoggedIn }) => {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const history = useHistory()\n\n  const handleChange = (e) => {\n    if (e.target.name === \"email\") setEmail(e.target.value)\n    if (e.target.name === \"password\") setPassword(e.target.value)\n  }\n\n  const handleLogin = (e) => {\n    e.preventDefault()\n    // Send Login request to our backend\n    const loginObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    }\n    fetch(api + \"login\", loginObj)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data)\n        if (!!data.id) {\n          // set the current user to some higher state\n          setUser(data)\n          setLoggedIn(true)\n          history.push(\"/profile\")\n        } \n      })\n      .catch((err) => console.log(err))\n  }\n\n  // console.log(email, password)\n  return (\n    <div className='login-form'>\n      <h1>So we meet again...</h1>\n          <form onSubmit={handleLogin} className='poem-form'>\n      {/* <input className='user-input' placeholder=\"Enter your username\"\n                type=\"text\"\n                required\n                value={user}\n                onChange={(e) => setUser(e.target.value)}/> */}\n          <input\n            placeholder='Enter email'\n            value={email}\n            onChange={handleChange}\n            name='email'\n            className='poem-input'\n          />\n            <input\n            placeholder='Enter password'\n            value={password}\n            onChange={handleChange}\n            name='password'\n            className='poem-input'\n          />\n          <button onClick={handleLogin} className='poem-button'>\n            Login\n          </button>\n    </form>\n    <p>New here?</p>\n    <Link to=\"/register\">\n          <h1>Register!</h1>\n        </Link>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}