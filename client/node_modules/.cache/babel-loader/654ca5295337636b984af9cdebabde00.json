{"ast":null,"code":"var _jsxFileName = \"/Users/alexfalconer/Development/code/auth-project-4/auth-project-4/client/src/components/ReviewList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReviewForm2 from './ReviewForm2';\nimport Review from './Review';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = \"http://127.0.0.1:3001/\";\n\nfunction ReviewList() {\n  _s();\n\n  const [reviews, setReviews] = useState([]);\n\n  const getReview = review => {\n    const newReviews = [...reviews, review];\n    setReviews(newReviews);\n    fetch(url + \"reviews\").then(result => {\n      result.json().then(resp => {\n        setReviews(resp);\n        console.log({\n          review\n        });\n      });\n    });\n  };\n\n  const deleteReview = id => {\n    const deleteArr = [...reviews].filter(review => review.id !== id);\n    fetch(api + `reviews/${id}`, {\n      method: 'DELETE'\n    }).then(result => {\n      result.json().then(resp => {\n        console.log(resp);\n        setReviews(deleteArr);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ReviewForm2, {\n      onSubmit: getReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Review, {\n      reviews: reviews,\n      deleteReview: deleteReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ReviewList, \"LYF2NNAuOXGr3U/tcCG165DoB2c=\");\n\n_c = ReviewList;\nexport default ReviewList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewList\");","map":{"version":3,"sources":["/Users/alexfalconer/Development/code/auth-project-4/auth-project-4/client/src/components/ReviewList.js"],"names":["React","useState","ReviewForm2","Review","api","ReviewList","reviews","setReviews","getReview","review","newReviews","fetch","url","then","result","json","resp","console","log","deleteReview","id","deleteArr","filter","method"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AACA,MAAMC,GAAG,GAAG,wBAAZ;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,SAAS,GAAIC,MAAD,IAAY;AAC5B,UAAMC,UAAU,GAAG,CAAC,GAAGJ,OAAJ,EAAaG,MAAb,CAAnB;AACAF,IAAAA,UAAU,CAACG,UAAD,CAAV;AACAC,IAAAA,KAAK,CAACC,GAAG,GAAG,SAAP,CAAL,CAAuBC,IAAvB,CAA6BC,MAAD,IAAY;AACtCA,MAAAA,MAAM,CAACC,IAAP,GAAcF,IAAd,CAAoBG,IAAD,IAAU;AAC3BT,QAAAA,UAAU,CAACS,IAAD,CAAV;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY;AAACT,UAAAA;AAAD,SAAZ;AACD,OAHD;AAID,KALD;AAMD,GATD;;AAWA,QAAMU,YAAY,GAAIC,EAAD,IAAQ;AAC3B,UAAMC,SAAS,GAAG,CAAC,GAAGf,OAAJ,EAAagB,MAAb,CAAoBb,MAAM,IAAIA,MAAM,CAACW,EAAP,KAAcA,EAA5C,CAAlB;AACAT,IAAAA,KAAK,CAACP,GAAG,GAAI,WAAUgB,EAAG,EAArB,EAAwB;AAC3BG,MAAAA,MAAM,EAAE;AADmB,KAAxB,CAAL,CAEGV,IAFH,CAESC,MAAD,IAAY;AAClBA,MAAAA,MAAM,CAACC,IAAP,GAAcF,IAAd,CAAoBG,IAAD,IAAU;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAT,QAAAA,UAAU,CAACc,SAAD,CAAV;AACD,OAHD;AAID,KAPD;AAQD,GAVD;;AAYA,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEb;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AACE,MAAA,OAAO,EAAEF,OADX;AAEE,MAAA,YAAY,EAAEa;AAFhB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAWD;;GArCQd,U;;KAAAA,U;AAuCT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReviewForm2 from './ReviewForm2';\nimport Review from './Review';\nconst api = \"http://127.0.0.1:3001/\"\n\nfunction ReviewList() {\n  const [reviews, setReviews] = useState([]);\n\n  const getReview = (review) => {\n    const newReviews = [...reviews, review];\n    setReviews(newReviews);\n    fetch(url + \"reviews\").then((result) => {\n      result.json().then((resp) => {\n        setReviews(resp)\n        console.log({review})\n      })\n    })\n  }\n\n  const deleteReview = (id) => {\n    const deleteArr = [...reviews].filter(review => review.id !== id);\n    fetch(api + `reviews/${id}`, {\n      method: 'DELETE'\n    }).then((result) => {\n      result.json().then((resp) => {\n        console.log(resp)\n        setReviews(deleteArr)\n      })\n    })\n  }\n  \n  return (\n    <>\n    <br></br>\n    <br></br>\n      <ReviewForm2 onSubmit={getReview} />\n      <Review\n        reviews={reviews}\n        deleteReview={deleteReview}\n      />\n    </>\n  );\n}\n\nexport default ReviewList;"]},"metadata":{},"sourceType":"module"}